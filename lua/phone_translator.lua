
local function translator(input, seg, env)
	local composition =  env.engine.context.composition
	if(not composition:empty()) then
		if (#input < 2) then
			--nothing 
		elseif (input:sub(#input - 1, #input) == "%%") then
			yield(Candidate("phone", seg.start, seg._end, " QQ ", "  Q-"))
			yield(Candidate("phone", seg.start, seg._end, "  qq ", ""))
			yield(Candidate("phone", seg.start, seg._end, " q- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -q ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " --  ", "   -Q"))
		elseif (input:sub(#input - 1, #input) == "%?") then
			yield(Candidate("phone", seg.start, seg._end, " QW ", "  QE"))
			yield(Candidate("phone", seg.start, seg._end, "  qw ", ""))
			yield(Candidate("phone", seg.start, seg._end, " qe ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -w ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -e ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -E  ", "   -W"))
		elseif (input:sub(#input - 1, #input) == "%!") then
			yield(Candidate("phone", seg.start, seg._end, " QR ", "  QT"))
			yield(Candidate("phone", seg.start, seg._end, "  qr ", ""))
			yield(Candidate("phone", seg.start, seg._end, " qt ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -r ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -t ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -T  ", "   -R"))
		elseif (input:sub(#input - 1, #input) == "%,") then
			yield(Candidate("phone", seg.start, seg._end, " QY ", "  QU"))
			yield(Candidate("phone", seg.start, seg._end, "  qy ", ""))
			yield(Candidate("phone", seg.start, seg._end, " qu ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -y ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -u ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -U  ", "   -Y"))
		elseif (input:sub(#input - 1, #input) == "%.") then
			yield(Candidate("phone", seg.start, seg._end, " QI ", "  QO"))
			yield(Candidate("phone", seg.start, seg._end, "  qi ", ""))
			yield(Candidate("phone", seg.start, seg._end, " qo ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -i ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -o ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -O  ", "   -I"))
		elseif (input:sub(#input - 1, #input) == "%@") then
			yield(Candidate("phone", seg.start, seg._end, " QP ", "  Q-"))
			yield(Candidate("phone", seg.start, seg._end, "  qp ", ""))
			yield(Candidate("phone", seg.start, seg._end, " q- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -p ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " --  ", "   -P"))
		elseif (input:sub(#input - 1, #input) == "%1") then
			yield(Candidate("phone", seg.start, seg._end, " QA ", "  Q-"))
			yield(Candidate("phone", seg.start, seg._end, "  qa ", ""))
			yield(Candidate("phone", seg.start, seg._end, " q- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -a ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " --  ", "   -A"))
		elseif (input:sub(#input - 1, #input) == "%2") then
			yield(Candidate("phone", seg.start, seg._end, " QS ", "  QD"))
			yield(Candidate("phone", seg.start, seg._end, "  qs ", ""))
			yield(Candidate("phone", seg.start, seg._end, " qd ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -s ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -d ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -D  ", "   -S"))
		elseif (input:sub(#input - 1, #input) == "%3") then
			yield(Candidate("phone", seg.start, seg._end, " QF ", "  QG"))
			yield(Candidate("phone", seg.start, seg._end, "  qf ", ""))
			yield(Candidate("phone", seg.start, seg._end, " qg ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -f ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -g ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -G  ", "   -F"))
		elseif (input:sub(#input - 1, #input) == "%4") then
			yield(Candidate("phone", seg.start, seg._end, " QH ", "  QJ"))
			yield(Candidate("phone", seg.start, seg._end, "  qh ", ""))
			yield(Candidate("phone", seg.start, seg._end, " qj ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -h ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -j ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -J  ", "   -H"))
		elseif (input:sub(#input - 1, #input) == "%5") then
			yield(Candidate("phone", seg.start, seg._end, " QK ", "  QL"))
			yield(Candidate("phone", seg.start, seg._end, "  qk ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ql ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -k ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -l ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -L  ", "   -K"))
		elseif (input:sub(#input - 1, #input) == "%6") then
			yield(Candidate("phone", seg.start, seg._end, " QM ", "  Q-"))
			yield(Candidate("phone", seg.start, seg._end, "  qm ", ""))
			yield(Candidate("phone", seg.start, seg._end, " q- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -m ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " --  ", "   -M"))
		elseif (input:sub(#input - 1, #input) == "%7") then
			yield(Candidate("phone", seg.start, seg._end, " QZ ", "  Q-"))
			yield(Candidate("phone", seg.start, seg._end, "  qz ", ""))
			yield(Candidate("phone", seg.start, seg._end, " q- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -z ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " --  ", "   -Z"))
		elseif (input:sub(#input - 1, #input) == "%8") then
			yield(Candidate("phone", seg.start, seg._end, " QX ", "  QC"))
			yield(Candidate("phone", seg.start, seg._end, "  qx ", ""))
			yield(Candidate("phone", seg.start, seg._end, " qc ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -x ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -c ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -C  ", "   -X"))
		elseif (input:sub(#input - 1, #input) == "%9") then
			yield(Candidate("phone", seg.start, seg._end, " QV ", "  QB"))
			yield(Candidate("phone", seg.start, seg._end, "  qv ", ""))
			yield(Candidate("phone", seg.start, seg._end, " qb ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -v ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -b ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -B  ", "   -V"))
		elseif (input:sub(#input - 1, #input) == "%0") then
			yield(Candidate("phone", seg.start, seg._end, " QN ", "  Q-"))
			yield(Candidate("phone", seg.start, seg._end, "  qn ", ""))
			yield(Candidate("phone", seg.start, seg._end, " q- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -n ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " --  ", "   -N"))
		elseif (input:sub(#input - 1, #input) == "?%") then
			yield(Candidate("phone", seg.start, seg._end, " WQ ", "  W-"))
			yield(Candidate("phone", seg.start, seg._end, "  wq ", ""))
			yield(Candidate("phone", seg.start, seg._end, " w- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  eq ", ""))
			yield(Candidate("phone", seg.start, seg._end, " e- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " E-  ", "   EQ"))
		elseif (input:sub(#input - 1, #input) == "??") then
			yield(Candidate("phone", seg.start, seg._end, " WW ", "  WE"))
			yield(Candidate("phone", seg.start, seg._end, "  ww ", ""))
			yield(Candidate("phone", seg.start, seg._end, " we ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  ew ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ee ", ""))
			yield(Candidate("phone", seg.start, seg._end, " EE  ", "   EW"))
		elseif (input:sub(#input - 1, #input) == "?!") then
			yield(Candidate("phone", seg.start, seg._end, " WR ", "  WT"))
			yield(Candidate("phone", seg.start, seg._end, "  wr ", ""))
			yield(Candidate("phone", seg.start, seg._end, " wt ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  er ", ""))
			yield(Candidate("phone", seg.start, seg._end, " et ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ET  ", "   ER"))
		elseif (input:sub(#input - 1, #input) == "?,") then
			yield(Candidate("phone", seg.start, seg._end, " WY ", "  WU"))
			yield(Candidate("phone", seg.start, seg._end, "  wy ", ""))
			yield(Candidate("phone", seg.start, seg._end, " wu ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  ey ", ""))
			yield(Candidate("phone", seg.start, seg._end, " eu ", ""))
			yield(Candidate("phone", seg.start, seg._end, " EU  ", "   EY"))
		elseif (input:sub(#input - 1, #input) == "?.") then
			yield(Candidate("phone", seg.start, seg._end, " WI ", "  WO"))
			yield(Candidate("phone", seg.start, seg._end, "  wi ", ""))
			yield(Candidate("phone", seg.start, seg._end, " wo ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  ei ", ""))
			yield(Candidate("phone", seg.start, seg._end, " eo ", ""))
			yield(Candidate("phone", seg.start, seg._end, " EO  ", "   EI"))
		elseif (input:sub(#input - 1, #input) == "?@") then
			yield(Candidate("phone", seg.start, seg._end, " WP ", "  W-"))
			yield(Candidate("phone", seg.start, seg._end, "  wp ", ""))
			yield(Candidate("phone", seg.start, seg._end, " w- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  ep ", ""))
			yield(Candidate("phone", seg.start, seg._end, " e- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " E-  ", "   EP"))
		elseif (input:sub(#input - 1, #input) == "?1") then
			yield(Candidate("phone", seg.start, seg._end, " WA ", "  W-"))
			yield(Candidate("phone", seg.start, seg._end, "  wa ", ""))
			yield(Candidate("phone", seg.start, seg._end, " w- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  ea ", ""))
			yield(Candidate("phone", seg.start, seg._end, " e- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " E-  ", "   EA"))
		elseif (input:sub(#input - 1, #input) == "?2") then
			yield(Candidate("phone", seg.start, seg._end, " WS ", "  WD"))
			yield(Candidate("phone", seg.start, seg._end, "  ws ", ""))
			yield(Candidate("phone", seg.start, seg._end, " wd ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  es ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ed ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ED  ", "   ES"))
		elseif (input:sub(#input - 1, #input) == "?3") then
			yield(Candidate("phone", seg.start, seg._end, " WF ", "  WG"))
			yield(Candidate("phone", seg.start, seg._end, "  wf ", ""))
			yield(Candidate("phone", seg.start, seg._end, " wg ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  ef ", ""))
			yield(Candidate("phone", seg.start, seg._end, " eg ", ""))
			yield(Candidate("phone", seg.start, seg._end, " EG  ", "   EF"))
		elseif (input:sub(#input - 1, #input) == "?4") then
			yield(Candidate("phone", seg.start, seg._end, " WH ", "  WJ"))
			yield(Candidate("phone", seg.start, seg._end, "  wh ", ""))
			yield(Candidate("phone", seg.start, seg._end, " wj ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  eh ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ej ", ""))
			yield(Candidate("phone", seg.start, seg._end, " EJ  ", "   EH"))
		elseif (input:sub(#input - 1, #input) == "?5") then
			yield(Candidate("phone", seg.start, seg._end, " WK ", "  WL"))
			yield(Candidate("phone", seg.start, seg._end, "  wk ", ""))
			yield(Candidate("phone", seg.start, seg._end, " wl ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  ek ", ""))
			yield(Candidate("phone", seg.start, seg._end, " el ", ""))
			yield(Candidate("phone", seg.start, seg._end, " EL  ", "   EK"))
		elseif (input:sub(#input - 1, #input) == "?6") then
			yield(Candidate("phone", seg.start, seg._end, " WM ", "  W-"))
			yield(Candidate("phone", seg.start, seg._end, "  wm ", ""))
			yield(Candidate("phone", seg.start, seg._end, " w- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  em ", ""))
			yield(Candidate("phone", seg.start, seg._end, " e- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " E-  ", "   EM"))
		elseif (input:sub(#input - 1, #input) == "?7") then
			yield(Candidate("phone", seg.start, seg._end, " WZ ", "  W-"))
			yield(Candidate("phone", seg.start, seg._end, "  wz ", ""))
			yield(Candidate("phone", seg.start, seg._end, " w- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  ez ", ""))
			yield(Candidate("phone", seg.start, seg._end, " e- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " E-  ", "   EZ"))
		elseif (input:sub(#input - 1, #input) == "?8") then
			yield(Candidate("phone", seg.start, seg._end, " WX ", "  WC"))
			yield(Candidate("phone", seg.start, seg._end, "  wx ", ""))
			yield(Candidate("phone", seg.start, seg._end, " wc ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  ex ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ec ", ""))
			yield(Candidate("phone", seg.start, seg._end, " EC  ", "   EX"))
		elseif (input:sub(#input - 1, #input) == "?9") then
			yield(Candidate("phone", seg.start, seg._end, " WV ", "  WB"))
			yield(Candidate("phone", seg.start, seg._end, "  wv ", ""))
			yield(Candidate("phone", seg.start, seg._end, " wb ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  ev ", ""))
			yield(Candidate("phone", seg.start, seg._end, " eb ", ""))
			yield(Candidate("phone", seg.start, seg._end, " EB  ", "   EV"))
		elseif (input:sub(#input - 1, #input) == "?0") then
			yield(Candidate("phone", seg.start, seg._end, " WN ", "  W-"))
			yield(Candidate("phone", seg.start, seg._end, "  wn ", ""))
			yield(Candidate("phone", seg.start, seg._end, " w- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  en ", ""))
			yield(Candidate("phone", seg.start, seg._end, " e- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " E-  ", "   EN"))
		elseif (input:sub(#input - 1, #input) == "!%") then
			yield(Candidate("phone", seg.start, seg._end, " RQ ", "  R-"))
			yield(Candidate("phone", seg.start, seg._end, "  rq ", ""))
			yield(Candidate("phone", seg.start, seg._end, " r- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  tq ", ""))
			yield(Candidate("phone", seg.start, seg._end, " t- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " T-  ", "   TQ"))
		elseif (input:sub(#input - 1, #input) == "!?") then
			yield(Candidate("phone", seg.start, seg._end, " RW ", "  RE"))
			yield(Candidate("phone", seg.start, seg._end, "  rw ", ""))
			yield(Candidate("phone", seg.start, seg._end, " re ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  tw ", ""))
			yield(Candidate("phone", seg.start, seg._end, " te ", ""))
			yield(Candidate("phone", seg.start, seg._end, " TE  ", "   TW"))
		elseif (input:sub(#input - 1, #input) == "!!") then
			yield(Candidate("phone", seg.start, seg._end, " RR ", "  RT"))
			yield(Candidate("phone", seg.start, seg._end, "  rr ", ""))
			yield(Candidate("phone", seg.start, seg._end, " rt ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  tr ", ""))
			yield(Candidate("phone", seg.start, seg._end, " tt ", ""))
			yield(Candidate("phone", seg.start, seg._end, " TT  ", "   TR"))
		elseif (input:sub(#input - 1, #input) == "!,") then
			yield(Candidate("phone", seg.start, seg._end, " RY ", "  RU"))
			yield(Candidate("phone", seg.start, seg._end, "  ry ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ru ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  ty ", ""))
			yield(Candidate("phone", seg.start, seg._end, " tu ", ""))
			yield(Candidate("phone", seg.start, seg._end, " TU  ", "   TY"))
		elseif (input:sub(#input - 1, #input) == "!.") then
			yield(Candidate("phone", seg.start, seg._end, " RI ", "  RO"))
			yield(Candidate("phone", seg.start, seg._end, "  ri ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ro ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  ti ", ""))
			yield(Candidate("phone", seg.start, seg._end, " to ", ""))
			yield(Candidate("phone", seg.start, seg._end, " TO  ", "   TI"))
		elseif (input:sub(#input - 1, #input) == "!@") then
			yield(Candidate("phone", seg.start, seg._end, " RP ", "  R-"))
			yield(Candidate("phone", seg.start, seg._end, "  rp ", ""))
			yield(Candidate("phone", seg.start, seg._end, " r- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  tp ", ""))
			yield(Candidate("phone", seg.start, seg._end, " t- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " T-  ", "   TP"))
		elseif (input:sub(#input - 1, #input) == "!1") then
			yield(Candidate("phone", seg.start, seg._end, " RA ", "  R-"))
			yield(Candidate("phone", seg.start, seg._end, "  ra ", ""))
			yield(Candidate("phone", seg.start, seg._end, " r- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  ta ", ""))
			yield(Candidate("phone", seg.start, seg._end, " t- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " T-  ", "   TA"))
		elseif (input:sub(#input - 1, #input) == "!2") then
			yield(Candidate("phone", seg.start, seg._end, " RS ", "  RD"))
			yield(Candidate("phone", seg.start, seg._end, "  rs ", ""))
			yield(Candidate("phone", seg.start, seg._end, " rd ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  ts ", ""))
			yield(Candidate("phone", seg.start, seg._end, " td ", ""))
			yield(Candidate("phone", seg.start, seg._end, " TD  ", "   TS"))
		elseif (input:sub(#input - 1, #input) == "!3") then
			yield(Candidate("phone", seg.start, seg._end, " RF ", "  RG"))
			yield(Candidate("phone", seg.start, seg._end, "  rf ", ""))
			yield(Candidate("phone", seg.start, seg._end, " rg ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  tf ", ""))
			yield(Candidate("phone", seg.start, seg._end, " tg ", ""))
			yield(Candidate("phone", seg.start, seg._end, " TG  ", "   TF"))
		elseif (input:sub(#input - 1, #input) == "!4") then
			yield(Candidate("phone", seg.start, seg._end, " RH ", "  RJ"))
			yield(Candidate("phone", seg.start, seg._end, "  rh ", ""))
			yield(Candidate("phone", seg.start, seg._end, " rj ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  th ", ""))
			yield(Candidate("phone", seg.start, seg._end, " tj ", ""))
			yield(Candidate("phone", seg.start, seg._end, " TJ  ", "   TH"))
		elseif (input:sub(#input - 1, #input) == "!5") then
			yield(Candidate("phone", seg.start, seg._end, " RK ", "  RL"))
			yield(Candidate("phone", seg.start, seg._end, "  rk ", ""))
			yield(Candidate("phone", seg.start, seg._end, " rl ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  tk ", ""))
			yield(Candidate("phone", seg.start, seg._end, " tl ", ""))
			yield(Candidate("phone", seg.start, seg._end, " TL  ", "   TK"))
		elseif (input:sub(#input - 1, #input) == "!6") then
			yield(Candidate("phone", seg.start, seg._end, " RM ", "  R-"))
			yield(Candidate("phone", seg.start, seg._end, "  rm ", ""))
			yield(Candidate("phone", seg.start, seg._end, " r- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  tm ", ""))
			yield(Candidate("phone", seg.start, seg._end, " t- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " T-  ", "   TM"))
		elseif (input:sub(#input - 1, #input) == "!7") then
			yield(Candidate("phone", seg.start, seg._end, " RZ ", "  R-"))
			yield(Candidate("phone", seg.start, seg._end, "  rz ", ""))
			yield(Candidate("phone", seg.start, seg._end, " r- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  tz ", ""))
			yield(Candidate("phone", seg.start, seg._end, " t- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " T-  ", "   TZ"))
		elseif (input:sub(#input - 1, #input) == "!8") then
			yield(Candidate("phone", seg.start, seg._end, " RX ", "  RC"))
			yield(Candidate("phone", seg.start, seg._end, "  rx ", ""))
			yield(Candidate("phone", seg.start, seg._end, " rc ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  tx ", ""))
			yield(Candidate("phone", seg.start, seg._end, " tc ", ""))
			yield(Candidate("phone", seg.start, seg._end, " TC  ", "   TX"))
		elseif (input:sub(#input - 1, #input) == "!9") then
			yield(Candidate("phone", seg.start, seg._end, " RV ", "  RB"))
			yield(Candidate("phone", seg.start, seg._end, "  rv ", ""))
			yield(Candidate("phone", seg.start, seg._end, " rb ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  tv ", ""))
			yield(Candidate("phone", seg.start, seg._end, " tb ", ""))
			yield(Candidate("phone", seg.start, seg._end, " TB  ", "   TV"))
		elseif (input:sub(#input - 1, #input) == "!0") then
			yield(Candidate("phone", seg.start, seg._end, " RN ", "  R-"))
			yield(Candidate("phone", seg.start, seg._end, "  rn ", ""))
			yield(Candidate("phone", seg.start, seg._end, " r- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  tn ", ""))
			yield(Candidate("phone", seg.start, seg._end, " t- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " T-  ", "   TN"))
		elseif (input:sub(#input - 1, #input) == ",%") then
			yield(Candidate("phone", seg.start, seg._end, " YQ ", "  Y-"))
			yield(Candidate("phone", seg.start, seg._end, "  yq ", ""))
			yield(Candidate("phone", seg.start, seg._end, " y- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  uq ", ""))
			yield(Candidate("phone", seg.start, seg._end, " u- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " U-  ", "   UQ"))
		elseif (input:sub(#input - 1, #input) == ",?") then
			yield(Candidate("phone", seg.start, seg._end, " YW ", "  YE"))
			yield(Candidate("phone", seg.start, seg._end, "  yw ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ye ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  uw ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ue ", ""))
			yield(Candidate("phone", seg.start, seg._end, " UE  ", "   UW"))
		elseif (input:sub(#input - 1, #input) == ",!") then
			yield(Candidate("phone", seg.start, seg._end, " YR ", "  YT"))
			yield(Candidate("phone", seg.start, seg._end, "  yr ", ""))
			yield(Candidate("phone", seg.start, seg._end, " yt ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  ur ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ut ", ""))
			yield(Candidate("phone", seg.start, seg._end, " UT  ", "   UR"))
		elseif (input:sub(#input - 1, #input) == ",,") then
			yield(Candidate("phone", seg.start, seg._end, " YY ", "  YU"))
			yield(Candidate("phone", seg.start, seg._end, "  yy ", ""))
			yield(Candidate("phone", seg.start, seg._end, " yu ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  uy ", ""))
			yield(Candidate("phone", seg.start, seg._end, " uu ", ""))
			yield(Candidate("phone", seg.start, seg._end, " UU  ", "   UY"))
		elseif (input:sub(#input - 1, #input) == ",.") then
			yield(Candidate("phone", seg.start, seg._end, " YI ", "  YO"))
			yield(Candidate("phone", seg.start, seg._end, "  yi ", ""))
			yield(Candidate("phone", seg.start, seg._end, " yo ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  ui ", ""))
			yield(Candidate("phone", seg.start, seg._end, " uo ", ""))
			yield(Candidate("phone", seg.start, seg._end, " UO  ", "   UI"))
		elseif (input:sub(#input - 1, #input) == ",@") then
			yield(Candidate("phone", seg.start, seg._end, " YP ", "  Y-"))
			yield(Candidate("phone", seg.start, seg._end, "  yp ", ""))
			yield(Candidate("phone", seg.start, seg._end, " y- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  up ", ""))
			yield(Candidate("phone", seg.start, seg._end, " u- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " U-  ", "   UP"))
		elseif (input:sub(#input - 1, #input) == ",1") then
			yield(Candidate("phone", seg.start, seg._end, " YA ", "  Y-"))
			yield(Candidate("phone", seg.start, seg._end, "  ya ", ""))
			yield(Candidate("phone", seg.start, seg._end, " y- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  ua ", ""))
			yield(Candidate("phone", seg.start, seg._end, " u- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " U-  ", "   UA"))
		elseif (input:sub(#input - 1, #input) == ",2") then
			yield(Candidate("phone", seg.start, seg._end, " YS ", "  YD"))
			yield(Candidate("phone", seg.start, seg._end, "  ys ", ""))
			yield(Candidate("phone", seg.start, seg._end, " yd ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  us ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ud ", ""))
			yield(Candidate("phone", seg.start, seg._end, " UD  ", "   US"))
		elseif (input:sub(#input - 1, #input) == ",3") then
			yield(Candidate("phone", seg.start, seg._end, " YF ", "  YG"))
			yield(Candidate("phone", seg.start, seg._end, "  yf ", ""))
			yield(Candidate("phone", seg.start, seg._end, " yg ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  uf ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ug ", ""))
			yield(Candidate("phone", seg.start, seg._end, " UG  ", "   UF"))
		elseif (input:sub(#input - 1, #input) == ",4") then
			yield(Candidate("phone", seg.start, seg._end, " YH ", "  YJ"))
			yield(Candidate("phone", seg.start, seg._end, "  yh ", ""))
			yield(Candidate("phone", seg.start, seg._end, " yj ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  uh ", ""))
			yield(Candidate("phone", seg.start, seg._end, " uj ", ""))
			yield(Candidate("phone", seg.start, seg._end, " UJ  ", "   UH"))
		elseif (input:sub(#input - 1, #input) == ",5") then
			yield(Candidate("phone", seg.start, seg._end, " YK ", "  YL"))
			yield(Candidate("phone", seg.start, seg._end, "  yk ", ""))
			yield(Candidate("phone", seg.start, seg._end, " yl ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  uk ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ul ", ""))
			yield(Candidate("phone", seg.start, seg._end, " UL  ", "   UK"))
		elseif (input:sub(#input - 1, #input) == ",6") then
			yield(Candidate("phone", seg.start, seg._end, " YM ", "  Y-"))
			yield(Candidate("phone", seg.start, seg._end, "  ym ", ""))
			yield(Candidate("phone", seg.start, seg._end, " y- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  um ", ""))
			yield(Candidate("phone", seg.start, seg._end, " u- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " U-  ", "   UM"))
		elseif (input:sub(#input - 1, #input) == ",7") then
			yield(Candidate("phone", seg.start, seg._end, " YZ ", "  Y-"))
			yield(Candidate("phone", seg.start, seg._end, "  yz ", ""))
			yield(Candidate("phone", seg.start, seg._end, " y- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  uz ", ""))
			yield(Candidate("phone", seg.start, seg._end, " u- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " U-  ", "   UZ"))
		elseif (input:sub(#input - 1, #input) == ",8") then
			yield(Candidate("phone", seg.start, seg._end, " YX ", "  YC"))
			yield(Candidate("phone", seg.start, seg._end, "  yx ", ""))
			yield(Candidate("phone", seg.start, seg._end, " yc ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  ux ", ""))
			yield(Candidate("phone", seg.start, seg._end, " uc ", ""))
			yield(Candidate("phone", seg.start, seg._end, " UC  ", "   UX"))
		elseif (input:sub(#input - 1, #input) == ",9") then
			yield(Candidate("phone", seg.start, seg._end, " YV ", "  YB"))
			yield(Candidate("phone", seg.start, seg._end, "  yv ", ""))
			yield(Candidate("phone", seg.start, seg._end, " yb ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  uv ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ub ", ""))
			yield(Candidate("phone", seg.start, seg._end, " UB  ", "   UV"))
		elseif (input:sub(#input - 1, #input) == ",0") then
			yield(Candidate("phone", seg.start, seg._end, " YN ", "  Y-"))
			yield(Candidate("phone", seg.start, seg._end, "  yn ", ""))
			yield(Candidate("phone", seg.start, seg._end, " y- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  un ", ""))
			yield(Candidate("phone", seg.start, seg._end, " u- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " U-  ", "   UN"))
		elseif (input:sub(#input - 1, #input) == ".%") then
			yield(Candidate("phone", seg.start, seg._end, " IQ ", "  I-"))
			yield(Candidate("phone", seg.start, seg._end, "  iq ", ""))
			yield(Candidate("phone", seg.start, seg._end, " i- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  oq ", ""))
			yield(Candidate("phone", seg.start, seg._end, " o- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " O-  ", "   OQ"))
		elseif (input:sub(#input - 1, #input) == ".?") then
			yield(Candidate("phone", seg.start, seg._end, " IW ", "  IE"))
			yield(Candidate("phone", seg.start, seg._end, "  iw ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ie ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  ow ", ""))
			yield(Candidate("phone", seg.start, seg._end, " oe ", ""))
			yield(Candidate("phone", seg.start, seg._end, " OE  ", "   OW"))
		elseif (input:sub(#input - 1, #input) == ".!") then
			yield(Candidate("phone", seg.start, seg._end, " IR ", "  IT"))
			yield(Candidate("phone", seg.start, seg._end, "  ir ", ""))
			yield(Candidate("phone", seg.start, seg._end, " it ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  or ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ot ", ""))
			yield(Candidate("phone", seg.start, seg._end, " OT  ", "   OR"))
		elseif (input:sub(#input - 1, #input) == ".,") then
			yield(Candidate("phone", seg.start, seg._end, " IY ", "  IU"))
			yield(Candidate("phone", seg.start, seg._end, "  iy ", ""))
			yield(Candidate("phone", seg.start, seg._end, " iu ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  oy ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ou ", ""))
			yield(Candidate("phone", seg.start, seg._end, " OU  ", "   OY"))
		elseif (input:sub(#input - 1, #input) == "..") then
			yield(Candidate("phone", seg.start, seg._end, " II ", "  IO"))
			yield(Candidate("phone", seg.start, seg._end, "  ii ", ""))
			yield(Candidate("phone", seg.start, seg._end, " io ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  oi ", ""))
			yield(Candidate("phone", seg.start, seg._end, " oo ", ""))
			yield(Candidate("phone", seg.start, seg._end, " OO  ", "   OI"))
		elseif (input:sub(#input - 1, #input) == ".@") then
			yield(Candidate("phone", seg.start, seg._end, " IP ", "  I-"))
			yield(Candidate("phone", seg.start, seg._end, "  ip ", ""))
			yield(Candidate("phone", seg.start, seg._end, " i- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  op ", ""))
			yield(Candidate("phone", seg.start, seg._end, " o- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " O-  ", "   OP"))
		elseif (input:sub(#input - 1, #input) == ".1") then
			yield(Candidate("phone", seg.start, seg._end, " IA ", "  I-"))
			yield(Candidate("phone", seg.start, seg._end, "  ia ", ""))
			yield(Candidate("phone", seg.start, seg._end, " i- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  oa ", ""))
			yield(Candidate("phone", seg.start, seg._end, " o- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " O-  ", "   OA"))
		elseif (input:sub(#input - 1, #input) == ".2") then
			yield(Candidate("phone", seg.start, seg._end, " IS ", "  ID"))
			yield(Candidate("phone", seg.start, seg._end, "  is ", ""))
			yield(Candidate("phone", seg.start, seg._end, " id ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  os ", ""))
			yield(Candidate("phone", seg.start, seg._end, " od ", ""))
			yield(Candidate("phone", seg.start, seg._end, " OD  ", "   OS"))
		elseif (input:sub(#input - 1, #input) == ".3") then
			yield(Candidate("phone", seg.start, seg._end, " IF ", "  IG"))
			yield(Candidate("phone", seg.start, seg._end, "  if ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ig ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  of ", ""))
			yield(Candidate("phone", seg.start, seg._end, " og ", ""))
			yield(Candidate("phone", seg.start, seg._end, " OG  ", "   OF"))
		elseif (input:sub(#input - 1, #input) == ".4") then
			yield(Candidate("phone", seg.start, seg._end, " IH ", "  IJ"))
			yield(Candidate("phone", seg.start, seg._end, "  ih ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ij ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  oh ", ""))
			yield(Candidate("phone", seg.start, seg._end, " oj ", ""))
			yield(Candidate("phone", seg.start, seg._end, " OJ  ", "   OH"))
		elseif (input:sub(#input - 1, #input) == ".5") then
			yield(Candidate("phone", seg.start, seg._end, " IK ", "  IL"))
			yield(Candidate("phone", seg.start, seg._end, "  ik ", ""))
			yield(Candidate("phone", seg.start, seg._end, " il ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  ok ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ol ", ""))
			yield(Candidate("phone", seg.start, seg._end, " OL  ", "   OK"))
		elseif (input:sub(#input - 1, #input) == ".6") then
			yield(Candidate("phone", seg.start, seg._end, " IM ", "  I-"))
			yield(Candidate("phone", seg.start, seg._end, "  im ", ""))
			yield(Candidate("phone", seg.start, seg._end, " i- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  om ", ""))
			yield(Candidate("phone", seg.start, seg._end, " o- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " O-  ", "   OM"))
		elseif (input:sub(#input - 1, #input) == ".7") then
			yield(Candidate("phone", seg.start, seg._end, " IZ ", "  I-"))
			yield(Candidate("phone", seg.start, seg._end, "  iz ", ""))
			yield(Candidate("phone", seg.start, seg._end, " i- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  oz ", ""))
			yield(Candidate("phone", seg.start, seg._end, " o- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " O-  ", "   OZ"))
		elseif (input:sub(#input - 1, #input) == ".8") then
			yield(Candidate("phone", seg.start, seg._end, " IX ", "  IC"))
			yield(Candidate("phone", seg.start, seg._end, "  ix ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ic ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  ox ", ""))
			yield(Candidate("phone", seg.start, seg._end, " oc ", ""))
			yield(Candidate("phone", seg.start, seg._end, " OC  ", "   OX"))
		elseif (input:sub(#input - 1, #input) == ".9") then
			yield(Candidate("phone", seg.start, seg._end, " IV ", "  IB"))
			yield(Candidate("phone", seg.start, seg._end, "  iv ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ib ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  ov ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ob ", ""))
			yield(Candidate("phone", seg.start, seg._end, " OB  ", "   OV"))
		elseif (input:sub(#input - 1, #input) == ".0") then
			yield(Candidate("phone", seg.start, seg._end, " IN ", "  I-"))
			yield(Candidate("phone", seg.start, seg._end, "  in ", ""))
			yield(Candidate("phone", seg.start, seg._end, " i- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  on ", ""))
			yield(Candidate("phone", seg.start, seg._end, " o- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " O-  ", "   ON"))
		elseif (input:sub(#input - 1, #input) == "@%") then
			yield(Candidate("phone", seg.start, seg._end, " PQ ", "  P-"))
			yield(Candidate("phone", seg.start, seg._end, "  pq ", ""))
			yield(Candidate("phone", seg.start, seg._end, " p- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -q ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " --  ", "   -Q"))
		elseif (input:sub(#input - 1, #input) == "@?") then
			yield(Candidate("phone", seg.start, seg._end, " PW ", "  PE"))
			yield(Candidate("phone", seg.start, seg._end, "  pw ", ""))
			yield(Candidate("phone", seg.start, seg._end, " pe ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -w ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -e ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -E  ", "   -W"))
		elseif (input:sub(#input - 1, #input) == "@!") then
			yield(Candidate("phone", seg.start, seg._end, " PR ", "  PT"))
			yield(Candidate("phone", seg.start, seg._end, "  pr ", ""))
			yield(Candidate("phone", seg.start, seg._end, " pt ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -r ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -t ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -T  ", "   -R"))
		elseif (input:sub(#input - 1, #input) == "@,") then
			yield(Candidate("phone", seg.start, seg._end, " PY ", "  PU"))
			yield(Candidate("phone", seg.start, seg._end, "  py ", ""))
			yield(Candidate("phone", seg.start, seg._end, " pu ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -y ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -u ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -U  ", "   -Y"))
		elseif (input:sub(#input - 1, #input) == "@.") then
			yield(Candidate("phone", seg.start, seg._end, " PI ", "  PO"))
			yield(Candidate("phone", seg.start, seg._end, "  pi ", ""))
			yield(Candidate("phone", seg.start, seg._end, " po ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -i ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -o ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -O  ", "   -I"))
		elseif (input:sub(#input - 1, #input) == "@@") then
			yield(Candidate("phone", seg.start, seg._end, " PP ", "  P-"))
			yield(Candidate("phone", seg.start, seg._end, "  pp ", ""))
			yield(Candidate("phone", seg.start, seg._end, " p- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -p ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " --  ", "   -P"))
		elseif (input:sub(#input - 1, #input) == "@1") then
			yield(Candidate("phone", seg.start, seg._end, " PA ", "  P-"))
			yield(Candidate("phone", seg.start, seg._end, "  pa ", ""))
			yield(Candidate("phone", seg.start, seg._end, " p- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -a ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " --  ", "   -A"))
		elseif (input:sub(#input - 1, #input) == "@2") then
			yield(Candidate("phone", seg.start, seg._end, " PS ", "  PD"))
			yield(Candidate("phone", seg.start, seg._end, "  ps ", ""))
			yield(Candidate("phone", seg.start, seg._end, " pd ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -s ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -d ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -D  ", "   -S"))
		elseif (input:sub(#input - 1, #input) == "@3") then
			yield(Candidate("phone", seg.start, seg._end, " PF ", "  PG"))
			yield(Candidate("phone", seg.start, seg._end, "  pf ", ""))
			yield(Candidate("phone", seg.start, seg._end, " pg ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -f ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -g ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -G  ", "   -F"))
		elseif (input:sub(#input - 1, #input) == "@4") then
			yield(Candidate("phone", seg.start, seg._end, " PH ", "  PJ"))
			yield(Candidate("phone", seg.start, seg._end, "  ph ", ""))
			yield(Candidate("phone", seg.start, seg._end, " pj ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -h ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -j ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -J  ", "   -H"))
		elseif (input:sub(#input - 1, #input) == "@5") then
			yield(Candidate("phone", seg.start, seg._end, " PK ", "  PL"))
			yield(Candidate("phone", seg.start, seg._end, "  pk ", ""))
			yield(Candidate("phone", seg.start, seg._end, " pl ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -k ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -l ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -L  ", "   -K"))
		elseif (input:sub(#input - 1, #input) == "@6") then
			yield(Candidate("phone", seg.start, seg._end, " PM ", "  P-"))
			yield(Candidate("phone", seg.start, seg._end, "  pm ", ""))
			yield(Candidate("phone", seg.start, seg._end, " p- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -m ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " --  ", "   -M"))
		elseif (input:sub(#input - 1, #input) == "@7") then
			yield(Candidate("phone", seg.start, seg._end, " PZ ", "  P-"))
			yield(Candidate("phone", seg.start, seg._end, "  pz ", ""))
			yield(Candidate("phone", seg.start, seg._end, " p- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -z ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " --  ", "   -Z"))
		elseif (input:sub(#input - 1, #input) == "@8") then
			yield(Candidate("phone", seg.start, seg._end, " PX ", "  PC"))
			yield(Candidate("phone", seg.start, seg._end, "  px ", ""))
			yield(Candidate("phone", seg.start, seg._end, " pc ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -x ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -c ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -C  ", "   -X"))
		elseif (input:sub(#input - 1, #input) == "@9") then
			yield(Candidate("phone", seg.start, seg._end, " PV ", "  PB"))
			yield(Candidate("phone", seg.start, seg._end, "  pv ", ""))
			yield(Candidate("phone", seg.start, seg._end, " pb ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -v ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -b ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -B  ", "   -V"))
		elseif (input:sub(#input - 1, #input) == "@0") then
			yield(Candidate("phone", seg.start, seg._end, " PN ", "  P-"))
			yield(Candidate("phone", seg.start, seg._end, "  pn ", ""))
			yield(Candidate("phone", seg.start, seg._end, " p- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -n ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " --  ", "   -N"))
		elseif (input:sub(#input - 1, #input) == "1%") then
			yield(Candidate("phone", seg.start, seg._end, " AQ ", "  A-"))
			yield(Candidate("phone", seg.start, seg._end, "  aq ", ""))
			yield(Candidate("phone", seg.start, seg._end, " a- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -q ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " --  ", "   -Q"))
		elseif (input:sub(#input - 1, #input) == "1?") then
			yield(Candidate("phone", seg.start, seg._end, " AW ", "  AE"))
			yield(Candidate("phone", seg.start, seg._end, "  aw ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ae ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -w ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -e ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -E  ", "   -W"))
		elseif (input:sub(#input - 1, #input) == "1!") then
			yield(Candidate("phone", seg.start, seg._end, " AR ", "  AT"))
			yield(Candidate("phone", seg.start, seg._end, "  ar ", ""))
			yield(Candidate("phone", seg.start, seg._end, " at ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -r ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -t ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -T  ", "   -R"))
		elseif (input:sub(#input - 1, #input) == "1,") then
			yield(Candidate("phone", seg.start, seg._end, " AY ", "  AU"))
			yield(Candidate("phone", seg.start, seg._end, "  ay ", ""))
			yield(Candidate("phone", seg.start, seg._end, " au ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -y ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -u ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -U  ", "   -Y"))
		elseif (input:sub(#input - 1, #input) == "1.") then
			yield(Candidate("phone", seg.start, seg._end, " AI ", "  AO"))
			yield(Candidate("phone", seg.start, seg._end, "  ai ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ao ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -i ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -o ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -O  ", "   -I"))
		elseif (input:sub(#input - 1, #input) == "1@") then
			yield(Candidate("phone", seg.start, seg._end, " AP ", "  A-"))
			yield(Candidate("phone", seg.start, seg._end, "  ap ", ""))
			yield(Candidate("phone", seg.start, seg._end, " a- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -p ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " --  ", "   -P"))
		elseif (input:sub(#input - 1, #input) == "11") then
			yield(Candidate("phone", seg.start, seg._end, " AA ", "  A-"))
			yield(Candidate("phone", seg.start, seg._end, "  aa ", ""))
			yield(Candidate("phone", seg.start, seg._end, " a- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -a ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " --  ", "   -A"))
		elseif (input:sub(#input - 1, #input) == "12") then
			yield(Candidate("phone", seg.start, seg._end, " AS ", "  AD"))
			yield(Candidate("phone", seg.start, seg._end, "  as ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ad ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -s ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -d ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -D  ", "   -S"))
		elseif (input:sub(#input - 1, #input) == "13") then
			yield(Candidate("phone", seg.start, seg._end, " AF ", "  AG"))
			yield(Candidate("phone", seg.start, seg._end, "  af ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ag ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -f ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -g ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -G  ", "   -F"))
		elseif (input:sub(#input - 1, #input) == "14") then
			yield(Candidate("phone", seg.start, seg._end, " AH ", "  AJ"))
			yield(Candidate("phone", seg.start, seg._end, "  ah ", ""))
			yield(Candidate("phone", seg.start, seg._end, " aj ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -h ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -j ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -J  ", "   -H"))
		elseif (input:sub(#input - 1, #input) == "15") then
			yield(Candidate("phone", seg.start, seg._end, " AK ", "  AL"))
			yield(Candidate("phone", seg.start, seg._end, "  ak ", ""))
			yield(Candidate("phone", seg.start, seg._end, " al ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -k ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -l ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -L  ", "   -K"))
		elseif (input:sub(#input - 1, #input) == "16") then
			yield(Candidate("phone", seg.start, seg._end, " AM ", "  A-"))
			yield(Candidate("phone", seg.start, seg._end, "  am ", ""))
			yield(Candidate("phone", seg.start, seg._end, " a- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -m ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " --  ", "   -M"))
		elseif (input:sub(#input - 1, #input) == "17") then
			yield(Candidate("phone", seg.start, seg._end, " AZ ", "  A-"))
			yield(Candidate("phone", seg.start, seg._end, "  az ", ""))
			yield(Candidate("phone", seg.start, seg._end, " a- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -z ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " --  ", "   -Z"))
		elseif (input:sub(#input - 1, #input) == "18") then
			yield(Candidate("phone", seg.start, seg._end, " AX ", "  AC"))
			yield(Candidate("phone", seg.start, seg._end, "  ax ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ac ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -x ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -c ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -C  ", "   -X"))
		elseif (input:sub(#input - 1, #input) == "19") then
			yield(Candidate("phone", seg.start, seg._end, " AV ", "  AB"))
			yield(Candidate("phone", seg.start, seg._end, "  av ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ab ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -v ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -b ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -B  ", "   -V"))
		elseif (input:sub(#input - 1, #input) == "10") then
			yield(Candidate("phone", seg.start, seg._end, " AN ", "  A-"))
			yield(Candidate("phone", seg.start, seg._end, "  an ", ""))
			yield(Candidate("phone", seg.start, seg._end, " a- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -n ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " --  ", "   -N"))
		elseif (input:sub(#input - 1, #input) == "2%") then
			yield(Candidate("phone", seg.start, seg._end, " SQ ", "  S-"))
			yield(Candidate("phone", seg.start, seg._end, "  sq ", ""))
			yield(Candidate("phone", seg.start, seg._end, " s- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  dq ", ""))
			yield(Candidate("phone", seg.start, seg._end, " d- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " D-  ", "   DQ"))
		elseif (input:sub(#input - 1, #input) == "2?") then
			yield(Candidate("phone", seg.start, seg._end, " SW ", "  SE"))
			yield(Candidate("phone", seg.start, seg._end, "  sw ", ""))
			yield(Candidate("phone", seg.start, seg._end, " se ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  dw ", ""))
			yield(Candidate("phone", seg.start, seg._end, " de ", ""))
			yield(Candidate("phone", seg.start, seg._end, " DE  ", "   DW"))
		elseif (input:sub(#input - 1, #input) == "2!") then
			yield(Candidate("phone", seg.start, seg._end, " SR ", "  ST"))
			yield(Candidate("phone", seg.start, seg._end, "  sr ", ""))
			yield(Candidate("phone", seg.start, seg._end, " st ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  dr ", ""))
			yield(Candidate("phone", seg.start, seg._end, " dt ", ""))
			yield(Candidate("phone", seg.start, seg._end, " DT  ", "   DR"))
		elseif (input:sub(#input - 1, #input) == "2,") then
			yield(Candidate("phone", seg.start, seg._end, " SY ", "  SU"))
			yield(Candidate("phone", seg.start, seg._end, "  sy ", ""))
			yield(Candidate("phone", seg.start, seg._end, " su ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  dy ", ""))
			yield(Candidate("phone", seg.start, seg._end, " du ", ""))
			yield(Candidate("phone", seg.start, seg._end, " DU  ", "   DY"))
		elseif (input:sub(#input - 1, #input) == "2.") then
			yield(Candidate("phone", seg.start, seg._end, " SI ", "  SO"))
			yield(Candidate("phone", seg.start, seg._end, "  si ", ""))
			yield(Candidate("phone", seg.start, seg._end, " so ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  di ", ""))
			yield(Candidate("phone", seg.start, seg._end, " do ", ""))
			yield(Candidate("phone", seg.start, seg._end, " DO  ", "   DI"))
		elseif (input:sub(#input - 1, #input) == "2@") then
			yield(Candidate("phone", seg.start, seg._end, " SP ", "  S-"))
			yield(Candidate("phone", seg.start, seg._end, "  sp ", ""))
			yield(Candidate("phone", seg.start, seg._end, " s- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  dp ", ""))
			yield(Candidate("phone", seg.start, seg._end, " d- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " D-  ", "   DP"))
		elseif (input:sub(#input - 1, #input) == "21") then
			yield(Candidate("phone", seg.start, seg._end, " SA ", "  S-"))
			yield(Candidate("phone", seg.start, seg._end, "  sa ", ""))
			yield(Candidate("phone", seg.start, seg._end, " s- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  da ", ""))
			yield(Candidate("phone", seg.start, seg._end, " d- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " D-  ", "   DA"))
		elseif (input:sub(#input - 1, #input) == "22") then
			yield(Candidate("phone", seg.start, seg._end, " SS ", "  SD"))
			yield(Candidate("phone", seg.start, seg._end, "  ss ", ""))
			yield(Candidate("phone", seg.start, seg._end, " sd ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  ds ", ""))
			yield(Candidate("phone", seg.start, seg._end, " dd ", ""))
			yield(Candidate("phone", seg.start, seg._end, " DD  ", "   DS"))
		elseif (input:sub(#input - 1, #input) == "23") then
			yield(Candidate("phone", seg.start, seg._end, " SF ", "  SG"))
			yield(Candidate("phone", seg.start, seg._end, "  sf ", ""))
			yield(Candidate("phone", seg.start, seg._end, " sg ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  df ", ""))
			yield(Candidate("phone", seg.start, seg._end, " dg ", ""))
			yield(Candidate("phone", seg.start, seg._end, " DG  ", "   DF"))
		elseif (input:sub(#input - 1, #input) == "24") then
			yield(Candidate("phone", seg.start, seg._end, " SH ", "  SJ"))
			yield(Candidate("phone", seg.start, seg._end, "  sh ", ""))
			yield(Candidate("phone", seg.start, seg._end, " sj ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  dh ", ""))
			yield(Candidate("phone", seg.start, seg._end, " dj ", ""))
			yield(Candidate("phone", seg.start, seg._end, " DJ  ", "   DH"))
		elseif (input:sub(#input - 1, #input) == "25") then
			yield(Candidate("phone", seg.start, seg._end, " SK ", "  SL"))
			yield(Candidate("phone", seg.start, seg._end, "  sk ", ""))
			yield(Candidate("phone", seg.start, seg._end, " sl ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  dk ", ""))
			yield(Candidate("phone", seg.start, seg._end, " dl ", ""))
			yield(Candidate("phone", seg.start, seg._end, " DL  ", "   DK"))
		elseif (input:sub(#input - 1, #input) == "26") then
			yield(Candidate("phone", seg.start, seg._end, " SM ", "  S-"))
			yield(Candidate("phone", seg.start, seg._end, "  sm ", ""))
			yield(Candidate("phone", seg.start, seg._end, " s- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  dm ", ""))
			yield(Candidate("phone", seg.start, seg._end, " d- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " D-  ", "   DM"))
		elseif (input:sub(#input - 1, #input) == "27") then
			yield(Candidate("phone", seg.start, seg._end, " SZ ", "  S-"))
			yield(Candidate("phone", seg.start, seg._end, "  sz ", ""))
			yield(Candidate("phone", seg.start, seg._end, " s- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  dz ", ""))
			yield(Candidate("phone", seg.start, seg._end, " d- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " D-  ", "   DZ"))
		elseif (input:sub(#input - 1, #input) == "28") then
			yield(Candidate("phone", seg.start, seg._end, " SX ", "  SC"))
			yield(Candidate("phone", seg.start, seg._end, "  sx ", ""))
			yield(Candidate("phone", seg.start, seg._end, " sc ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  dx ", ""))
			yield(Candidate("phone", seg.start, seg._end, " dc ", ""))
			yield(Candidate("phone", seg.start, seg._end, " DC  ", "   DX"))
		elseif (input:sub(#input - 1, #input) == "29") then
			yield(Candidate("phone", seg.start, seg._end, " SV ", "  SB"))
			yield(Candidate("phone", seg.start, seg._end, "  sv ", ""))
			yield(Candidate("phone", seg.start, seg._end, " sb ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  dv ", ""))
			yield(Candidate("phone", seg.start, seg._end, " db ", ""))
			yield(Candidate("phone", seg.start, seg._end, " DB  ", "   DV"))
		elseif (input:sub(#input - 1, #input) == "20") then
			yield(Candidate("phone", seg.start, seg._end, " SN ", "  S-"))
			yield(Candidate("phone", seg.start, seg._end, "  sn ", ""))
			yield(Candidate("phone", seg.start, seg._end, " s- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  dn ", ""))
			yield(Candidate("phone", seg.start, seg._end, " d- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " D-  ", "   DN"))
		elseif (input:sub(#input - 1, #input) == "3%") then
			yield(Candidate("phone", seg.start, seg._end, " FQ ", "  F-"))
			yield(Candidate("phone", seg.start, seg._end, "  fq ", ""))
			yield(Candidate("phone", seg.start, seg._end, " f- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  gq ", ""))
			yield(Candidate("phone", seg.start, seg._end, " g- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " G-  ", "   GQ"))
		elseif (input:sub(#input - 1, #input) == "3?") then
			yield(Candidate("phone", seg.start, seg._end, " FW ", "  FE"))
			yield(Candidate("phone", seg.start, seg._end, "  fw ", ""))
			yield(Candidate("phone", seg.start, seg._end, " fe ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  gw ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ge ", ""))
			yield(Candidate("phone", seg.start, seg._end, " GE  ", "   GW"))
		elseif (input:sub(#input - 1, #input) == "3!") then
			yield(Candidate("phone", seg.start, seg._end, " FR ", "  FT"))
			yield(Candidate("phone", seg.start, seg._end, "  fr ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ft ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  gr ", ""))
			yield(Candidate("phone", seg.start, seg._end, " gt ", ""))
			yield(Candidate("phone", seg.start, seg._end, " GT  ", "   GR"))
		elseif (input:sub(#input - 1, #input) == "3,") then
			yield(Candidate("phone", seg.start, seg._end, " FY ", "  FU"))
			yield(Candidate("phone", seg.start, seg._end, "  fy ", ""))
			yield(Candidate("phone", seg.start, seg._end, " fu ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  gy ", ""))
			yield(Candidate("phone", seg.start, seg._end, " gu ", ""))
			yield(Candidate("phone", seg.start, seg._end, " GU  ", "   GY"))
		elseif (input:sub(#input - 1, #input) == "3.") then
			yield(Candidate("phone", seg.start, seg._end, " FI ", "  FO"))
			yield(Candidate("phone", seg.start, seg._end, "  fi ", ""))
			yield(Candidate("phone", seg.start, seg._end, " fo ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  gi ", ""))
			yield(Candidate("phone", seg.start, seg._end, " go ", ""))
			yield(Candidate("phone", seg.start, seg._end, " GO  ", "   GI"))
		elseif (input:sub(#input - 1, #input) == "3@") then
			yield(Candidate("phone", seg.start, seg._end, " FP ", "  F-"))
			yield(Candidate("phone", seg.start, seg._end, "  fp ", ""))
			yield(Candidate("phone", seg.start, seg._end, " f- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  gp ", ""))
			yield(Candidate("phone", seg.start, seg._end, " g- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " G-  ", "   GP"))
		elseif (input:sub(#input - 1, #input) == "31") then
			yield(Candidate("phone", seg.start, seg._end, " FA ", "  F-"))
			yield(Candidate("phone", seg.start, seg._end, "  fa ", ""))
			yield(Candidate("phone", seg.start, seg._end, " f- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  ga ", ""))
			yield(Candidate("phone", seg.start, seg._end, " g- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " G-  ", "   GA"))
		elseif (input:sub(#input - 1, #input) == "32") then
			yield(Candidate("phone", seg.start, seg._end, " FS ", "  FD"))
			yield(Candidate("phone", seg.start, seg._end, "  fs ", ""))
			yield(Candidate("phone", seg.start, seg._end, " fd ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  gs ", ""))
			yield(Candidate("phone", seg.start, seg._end, " gd ", ""))
			yield(Candidate("phone", seg.start, seg._end, " GD  ", "   GS"))
		elseif (input:sub(#input - 1, #input) == "33") then
			yield(Candidate("phone", seg.start, seg._end, " FF ", "  FG"))
			yield(Candidate("phone", seg.start, seg._end, "  ff ", ""))
			yield(Candidate("phone", seg.start, seg._end, " fg ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  gf ", ""))
			yield(Candidate("phone", seg.start, seg._end, " gg ", ""))
			yield(Candidate("phone", seg.start, seg._end, " GG  ", "   GF"))
		elseif (input:sub(#input - 1, #input) == "34") then
			yield(Candidate("phone", seg.start, seg._end, " FH ", "  FJ"))
			yield(Candidate("phone", seg.start, seg._end, "  fh ", ""))
			yield(Candidate("phone", seg.start, seg._end, " fj ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  gh ", ""))
			yield(Candidate("phone", seg.start, seg._end, " gj ", ""))
			yield(Candidate("phone", seg.start, seg._end, " GJ  ", "   GH"))
		elseif (input:sub(#input - 1, #input) == "35") then
			yield(Candidate("phone", seg.start, seg._end, " FK ", "  FL"))
			yield(Candidate("phone", seg.start, seg._end, "  fk ", ""))
			yield(Candidate("phone", seg.start, seg._end, " fl ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  gk ", ""))
			yield(Candidate("phone", seg.start, seg._end, " gl ", ""))
			yield(Candidate("phone", seg.start, seg._end, " GL  ", "   GK"))
		elseif (input:sub(#input - 1, #input) == "36") then
			yield(Candidate("phone", seg.start, seg._end, " FM ", "  F-"))
			yield(Candidate("phone", seg.start, seg._end, "  fm ", ""))
			yield(Candidate("phone", seg.start, seg._end, " f- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  gm ", ""))
			yield(Candidate("phone", seg.start, seg._end, " g- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " G-  ", "   GM"))
		elseif (input:sub(#input - 1, #input) == "37") then
			yield(Candidate("phone", seg.start, seg._end, " FZ ", "  F-"))
			yield(Candidate("phone", seg.start, seg._end, "  fz ", ""))
			yield(Candidate("phone", seg.start, seg._end, " f- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  gz ", ""))
			yield(Candidate("phone", seg.start, seg._end, " g- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " G-  ", "   GZ"))
		elseif (input:sub(#input - 1, #input) == "38") then
			yield(Candidate("phone", seg.start, seg._end, " FX ", "  FC"))
			yield(Candidate("phone", seg.start, seg._end, "  fx ", ""))
			yield(Candidate("phone", seg.start, seg._end, " fc ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  gx ", ""))
			yield(Candidate("phone", seg.start, seg._end, " gc ", ""))
			yield(Candidate("phone", seg.start, seg._end, " GC  ", "   GX"))
		elseif (input:sub(#input - 1, #input) == "39") then
			yield(Candidate("phone", seg.start, seg._end, " FV ", "  FB"))
			yield(Candidate("phone", seg.start, seg._end, "  fv ", ""))
			yield(Candidate("phone", seg.start, seg._end, " fb ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  gv ", ""))
			yield(Candidate("phone", seg.start, seg._end, " gb ", ""))
			yield(Candidate("phone", seg.start, seg._end, " GB  ", "   GV"))
		elseif (input:sub(#input - 1, #input) == "30") then
			yield(Candidate("phone", seg.start, seg._end, " FN ", "  F-"))
			yield(Candidate("phone", seg.start, seg._end, "  fn ", ""))
			yield(Candidate("phone", seg.start, seg._end, " f- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  gn ", ""))
			yield(Candidate("phone", seg.start, seg._end, " g- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " G-  ", "   GN"))
		elseif (input:sub(#input - 1, #input) == "4%") then
			yield(Candidate("phone", seg.start, seg._end, " HQ ", "  H-"))
			yield(Candidate("phone", seg.start, seg._end, "  hq ", ""))
			yield(Candidate("phone", seg.start, seg._end, " h- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  jq ", ""))
			yield(Candidate("phone", seg.start, seg._end, " j- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " J-  ", "   JQ"))
		elseif (input:sub(#input - 1, #input) == "4?") then
			yield(Candidate("phone", seg.start, seg._end, " HW ", "  HE"))
			yield(Candidate("phone", seg.start, seg._end, "  hw ", ""))
			yield(Candidate("phone", seg.start, seg._end, " he ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  jw ", ""))
			yield(Candidate("phone", seg.start, seg._end, " je ", ""))
			yield(Candidate("phone", seg.start, seg._end, " JE  ", "   JW"))
		elseif (input:sub(#input - 1, #input) == "4!") then
			yield(Candidate("phone", seg.start, seg._end, " HR ", "  HT"))
			yield(Candidate("phone", seg.start, seg._end, "  hr ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ht ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  jr ", ""))
			yield(Candidate("phone", seg.start, seg._end, " jt ", ""))
			yield(Candidate("phone", seg.start, seg._end, " JT  ", "   JR"))
		elseif (input:sub(#input - 1, #input) == "4,") then
			yield(Candidate("phone", seg.start, seg._end, " HY ", "  HU"))
			yield(Candidate("phone", seg.start, seg._end, "  hy ", ""))
			yield(Candidate("phone", seg.start, seg._end, " hu ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  jy ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ju ", ""))
			yield(Candidate("phone", seg.start, seg._end, " JU  ", "   JY"))
		elseif (input:sub(#input - 1, #input) == "4.") then
			yield(Candidate("phone", seg.start, seg._end, " HI ", "  HO"))
			yield(Candidate("phone", seg.start, seg._end, "  hi ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ho ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  ji ", ""))
			yield(Candidate("phone", seg.start, seg._end, " jo ", ""))
			yield(Candidate("phone", seg.start, seg._end, " JO  ", "   JI"))
		elseif (input:sub(#input - 1, #input) == "4@") then
			yield(Candidate("phone", seg.start, seg._end, " HP ", "  H-"))
			yield(Candidate("phone", seg.start, seg._end, "  hp ", ""))
			yield(Candidate("phone", seg.start, seg._end, " h- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  jp ", ""))
			yield(Candidate("phone", seg.start, seg._end, " j- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " J-  ", "   JP"))
		elseif (input:sub(#input - 1, #input) == "41") then
			yield(Candidate("phone", seg.start, seg._end, " HA ", "  H-"))
			yield(Candidate("phone", seg.start, seg._end, "  ha ", ""))
			yield(Candidate("phone", seg.start, seg._end, " h- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  ja ", ""))
			yield(Candidate("phone", seg.start, seg._end, " j- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " J-  ", "   JA"))
		elseif (input:sub(#input - 1, #input) == "42") then
			yield(Candidate("phone", seg.start, seg._end, " HS ", "  HD"))
			yield(Candidate("phone", seg.start, seg._end, "  hs ", ""))
			yield(Candidate("phone", seg.start, seg._end, " hd ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  js ", ""))
			yield(Candidate("phone", seg.start, seg._end, " jd ", ""))
			yield(Candidate("phone", seg.start, seg._end, " JD  ", "   JS"))
		elseif (input:sub(#input - 1, #input) == "43") then
			yield(Candidate("phone", seg.start, seg._end, " HF ", "  HG"))
			yield(Candidate("phone", seg.start, seg._end, "  hf ", ""))
			yield(Candidate("phone", seg.start, seg._end, " hg ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  jf ", ""))
			yield(Candidate("phone", seg.start, seg._end, " jg ", ""))
			yield(Candidate("phone", seg.start, seg._end, " JG  ", "   JF"))
		elseif (input:sub(#input - 1, #input) == "44") then
			yield(Candidate("phone", seg.start, seg._end, " HH ", "  HJ"))
			yield(Candidate("phone", seg.start, seg._end, "  hh ", ""))
			yield(Candidate("phone", seg.start, seg._end, " hj ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  jh ", ""))
			yield(Candidate("phone", seg.start, seg._end, " jj ", ""))
			yield(Candidate("phone", seg.start, seg._end, " JJ  ", "   JH"))
		elseif (input:sub(#input - 1, #input) == "45") then
			yield(Candidate("phone", seg.start, seg._end, " HK ", "  HL"))
			yield(Candidate("phone", seg.start, seg._end, "  hk ", ""))
			yield(Candidate("phone", seg.start, seg._end, " hl ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  jk ", ""))
			yield(Candidate("phone", seg.start, seg._end, " jl ", ""))
			yield(Candidate("phone", seg.start, seg._end, " JL  ", "   JK"))
		elseif (input:sub(#input - 1, #input) == "46") then
			yield(Candidate("phone", seg.start, seg._end, " HM ", "  H-"))
			yield(Candidate("phone", seg.start, seg._end, "  hm ", ""))
			yield(Candidate("phone", seg.start, seg._end, " h- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  jm ", ""))
			yield(Candidate("phone", seg.start, seg._end, " j- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " J-  ", "   JM"))
		elseif (input:sub(#input - 1, #input) == "47") then
			yield(Candidate("phone", seg.start, seg._end, " HZ ", "  H-"))
			yield(Candidate("phone", seg.start, seg._end, "  hz ", ""))
			yield(Candidate("phone", seg.start, seg._end, " h- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  jz ", ""))
			yield(Candidate("phone", seg.start, seg._end, " j- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " J-  ", "   JZ"))
		elseif (input:sub(#input - 1, #input) == "48") then
			yield(Candidate("phone", seg.start, seg._end, " HX ", "  HC"))
			yield(Candidate("phone", seg.start, seg._end, "  hx ", ""))
			yield(Candidate("phone", seg.start, seg._end, " hc ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  jx ", ""))
			yield(Candidate("phone", seg.start, seg._end, " jc ", ""))
			yield(Candidate("phone", seg.start, seg._end, " JC  ", "   JX"))
		elseif (input:sub(#input - 1, #input) == "49") then
			yield(Candidate("phone", seg.start, seg._end, " HV ", "  HB"))
			yield(Candidate("phone", seg.start, seg._end, "  hv ", ""))
			yield(Candidate("phone", seg.start, seg._end, " hb ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  jv ", ""))
			yield(Candidate("phone", seg.start, seg._end, " jb ", ""))
			yield(Candidate("phone", seg.start, seg._end, " JB  ", "   JV"))
		elseif (input:sub(#input - 1, #input) == "40") then
			yield(Candidate("phone", seg.start, seg._end, " HN ", "  H-"))
			yield(Candidate("phone", seg.start, seg._end, "  hn ", ""))
			yield(Candidate("phone", seg.start, seg._end, " h- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  jn ", ""))
			yield(Candidate("phone", seg.start, seg._end, " j- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " J-  ", "   JN"))
		elseif (input:sub(#input - 1, #input) == "5%") then
			yield(Candidate("phone", seg.start, seg._end, " KQ ", "  K-"))
			yield(Candidate("phone", seg.start, seg._end, "  kq ", ""))
			yield(Candidate("phone", seg.start, seg._end, " k- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  lq ", ""))
			yield(Candidate("phone", seg.start, seg._end, " l- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " L-  ", "   LQ"))
		elseif (input:sub(#input - 1, #input) == "5?") then
			yield(Candidate("phone", seg.start, seg._end, " KW ", "  KE"))
			yield(Candidate("phone", seg.start, seg._end, "  kw ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ke ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  lw ", ""))
			yield(Candidate("phone", seg.start, seg._end, " le ", ""))
			yield(Candidate("phone", seg.start, seg._end, " LE  ", "   LW"))
		elseif (input:sub(#input - 1, #input) == "5!") then
			yield(Candidate("phone", seg.start, seg._end, " KR ", "  KT"))
			yield(Candidate("phone", seg.start, seg._end, "  kr ", ""))
			yield(Candidate("phone", seg.start, seg._end, " kt ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  lr ", ""))
			yield(Candidate("phone", seg.start, seg._end, " lt ", ""))
			yield(Candidate("phone", seg.start, seg._end, " LT  ", "   LR"))
		elseif (input:sub(#input - 1, #input) == "5,") then
			yield(Candidate("phone", seg.start, seg._end, " KY ", "  KU"))
			yield(Candidate("phone", seg.start, seg._end, "  ky ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ku ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  ly ", ""))
			yield(Candidate("phone", seg.start, seg._end, " lu ", ""))
			yield(Candidate("phone", seg.start, seg._end, " LU  ", "   LY"))
		elseif (input:sub(#input - 1, #input) == "5.") then
			yield(Candidate("phone", seg.start, seg._end, " KI ", "  KO"))
			yield(Candidate("phone", seg.start, seg._end, "  ki ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ko ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  li ", ""))
			yield(Candidate("phone", seg.start, seg._end, " lo ", ""))
			yield(Candidate("phone", seg.start, seg._end, " LO  ", "   LI"))
		elseif (input:sub(#input - 1, #input) == "5@") then
			yield(Candidate("phone", seg.start, seg._end, " KP ", "  K-"))
			yield(Candidate("phone", seg.start, seg._end, "  kp ", ""))
			yield(Candidate("phone", seg.start, seg._end, " k- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  lp ", ""))
			yield(Candidate("phone", seg.start, seg._end, " l- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " L-  ", "   LP"))
		elseif (input:sub(#input - 1, #input) == "51") then
			yield(Candidate("phone", seg.start, seg._end, " KA ", "  K-"))
			yield(Candidate("phone", seg.start, seg._end, "  ka ", ""))
			yield(Candidate("phone", seg.start, seg._end, " k- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  la ", ""))
			yield(Candidate("phone", seg.start, seg._end, " l- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " L-  ", "   LA"))
		elseif (input:sub(#input - 1, #input) == "52") then
			yield(Candidate("phone", seg.start, seg._end, " KS ", "  KD"))
			yield(Candidate("phone", seg.start, seg._end, "  ks ", ""))
			yield(Candidate("phone", seg.start, seg._end, " kd ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  ls ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ld ", ""))
			yield(Candidate("phone", seg.start, seg._end, " LD  ", "   LS"))
		elseif (input:sub(#input - 1, #input) == "53") then
			yield(Candidate("phone", seg.start, seg._end, " KF ", "  KG"))
			yield(Candidate("phone", seg.start, seg._end, "  kf ", ""))
			yield(Candidate("phone", seg.start, seg._end, " kg ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  lf ", ""))
			yield(Candidate("phone", seg.start, seg._end, " lg ", ""))
			yield(Candidate("phone", seg.start, seg._end, " LG  ", "   LF"))
		elseif (input:sub(#input - 1, #input) == "54") then
			yield(Candidate("phone", seg.start, seg._end, " KH ", "  KJ"))
			yield(Candidate("phone", seg.start, seg._end, "  kh ", ""))
			yield(Candidate("phone", seg.start, seg._end, " kj ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  lh ", ""))
			yield(Candidate("phone", seg.start, seg._end, " lj ", ""))
			yield(Candidate("phone", seg.start, seg._end, " LJ  ", "   LH"))
		elseif (input:sub(#input - 1, #input) == "55") then
			yield(Candidate("phone", seg.start, seg._end, " KK ", "  KL"))
			yield(Candidate("phone", seg.start, seg._end, "  kk ", ""))
			yield(Candidate("phone", seg.start, seg._end, " kl ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  lk ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ll ", ""))
			yield(Candidate("phone", seg.start, seg._end, " LL  ", "   LK"))
		elseif (input:sub(#input - 1, #input) == "56") then
			yield(Candidate("phone", seg.start, seg._end, " KM ", "  K-"))
			yield(Candidate("phone", seg.start, seg._end, "  km ", ""))
			yield(Candidate("phone", seg.start, seg._end, " k- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  lm ", ""))
			yield(Candidate("phone", seg.start, seg._end, " l- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " L-  ", "   LM"))
		elseif (input:sub(#input - 1, #input) == "57") then
			yield(Candidate("phone", seg.start, seg._end, " KZ ", "  K-"))
			yield(Candidate("phone", seg.start, seg._end, "  kz ", ""))
			yield(Candidate("phone", seg.start, seg._end, " k- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  lz ", ""))
			yield(Candidate("phone", seg.start, seg._end, " l- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " L-  ", "   LZ"))
		elseif (input:sub(#input - 1, #input) == "58") then
			yield(Candidate("phone", seg.start, seg._end, " KX ", "  KC"))
			yield(Candidate("phone", seg.start, seg._end, "  kx ", ""))
			yield(Candidate("phone", seg.start, seg._end, " kc ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  lx ", ""))
			yield(Candidate("phone", seg.start, seg._end, " lc ", ""))
			yield(Candidate("phone", seg.start, seg._end, " LC  ", "   LX"))
		elseif (input:sub(#input - 1, #input) == "59") then
			yield(Candidate("phone", seg.start, seg._end, " KV ", "  KB"))
			yield(Candidate("phone", seg.start, seg._end, "  kv ", ""))
			yield(Candidate("phone", seg.start, seg._end, " kb ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  lv ", ""))
			yield(Candidate("phone", seg.start, seg._end, " lb ", ""))
			yield(Candidate("phone", seg.start, seg._end, " LB  ", "   LV"))
		elseif (input:sub(#input - 1, #input) == "50") then
			yield(Candidate("phone", seg.start, seg._end, " KN ", "  K-"))
			yield(Candidate("phone", seg.start, seg._end, "  kn ", ""))
			yield(Candidate("phone", seg.start, seg._end, " k- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  ln ", ""))
			yield(Candidate("phone", seg.start, seg._end, " l- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " L-  ", "   LN"))
		elseif (input:sub(#input - 1, #input) == "6%") then
			yield(Candidate("phone", seg.start, seg._end, " MQ ", "  M-"))
			yield(Candidate("phone", seg.start, seg._end, "  mq ", ""))
			yield(Candidate("phone", seg.start, seg._end, " m- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -q ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " --  ", "   -Q"))
		elseif (input:sub(#input - 1, #input) == "6?") then
			yield(Candidate("phone", seg.start, seg._end, " MW ", "  ME"))
			yield(Candidate("phone", seg.start, seg._end, "  mw ", ""))
			yield(Candidate("phone", seg.start, seg._end, " me ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -w ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -e ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -E  ", "   -W"))
		elseif (input:sub(#input - 1, #input) == "6!") then
			yield(Candidate("phone", seg.start, seg._end, " MR ", "  MT"))
			yield(Candidate("phone", seg.start, seg._end, "  mr ", ""))
			yield(Candidate("phone", seg.start, seg._end, " mt ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -r ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -t ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -T  ", "   -R"))
		elseif (input:sub(#input - 1, #input) == "6,") then
			yield(Candidate("phone", seg.start, seg._end, " MY ", "  MU"))
			yield(Candidate("phone", seg.start, seg._end, "  my ", ""))
			yield(Candidate("phone", seg.start, seg._end, " mu ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -y ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -u ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -U  ", "   -Y"))
		elseif (input:sub(#input - 1, #input) == "6.") then
			yield(Candidate("phone", seg.start, seg._end, " MI ", "  MO"))
			yield(Candidate("phone", seg.start, seg._end, "  mi ", ""))
			yield(Candidate("phone", seg.start, seg._end, " mo ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -i ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -o ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -O  ", "   -I"))
		elseif (input:sub(#input - 1, #input) == "6@") then
			yield(Candidate("phone", seg.start, seg._end, " MP ", "  M-"))
			yield(Candidate("phone", seg.start, seg._end, "  mp ", ""))
			yield(Candidate("phone", seg.start, seg._end, " m- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -p ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " --  ", "   -P"))
		elseif (input:sub(#input - 1, #input) == "61") then
			yield(Candidate("phone", seg.start, seg._end, " MA ", "  M-"))
			yield(Candidate("phone", seg.start, seg._end, "  ma ", ""))
			yield(Candidate("phone", seg.start, seg._end, " m- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -a ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " --  ", "   -A"))
		elseif (input:sub(#input - 1, #input) == "62") then
			yield(Candidate("phone", seg.start, seg._end, " MS ", "  MD"))
			yield(Candidate("phone", seg.start, seg._end, "  ms ", ""))
			yield(Candidate("phone", seg.start, seg._end, " md ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -s ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -d ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -D  ", "   -S"))
		elseif (input:sub(#input - 1, #input) == "63") then
			yield(Candidate("phone", seg.start, seg._end, " MF ", "  MG"))
			yield(Candidate("phone", seg.start, seg._end, "  mf ", ""))
			yield(Candidate("phone", seg.start, seg._end, " mg ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -f ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -g ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -G  ", "   -F"))
		elseif (input:sub(#input - 1, #input) == "64") then
			yield(Candidate("phone", seg.start, seg._end, " MH ", "  MJ"))
			yield(Candidate("phone", seg.start, seg._end, "  mh ", ""))
			yield(Candidate("phone", seg.start, seg._end, " mj ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -h ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -j ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -J  ", "   -H"))
		elseif (input:sub(#input - 1, #input) == "65") then
			yield(Candidate("phone", seg.start, seg._end, " MK ", "  ML"))
			yield(Candidate("phone", seg.start, seg._end, "  mk ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ml ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -k ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -l ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -L  ", "   -K"))
		elseif (input:sub(#input - 1, #input) == "66") then
			yield(Candidate("phone", seg.start, seg._end, " MM ", "  M-"))
			yield(Candidate("phone", seg.start, seg._end, "  mm ", ""))
			yield(Candidate("phone", seg.start, seg._end, " m- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -m ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " --  ", "   -M"))
		elseif (input:sub(#input - 1, #input) == "67") then
			yield(Candidate("phone", seg.start, seg._end, " MZ ", "  M-"))
			yield(Candidate("phone", seg.start, seg._end, "  mz ", ""))
			yield(Candidate("phone", seg.start, seg._end, " m- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -z ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " --  ", "   -Z"))
		elseif (input:sub(#input - 1, #input) == "68") then
			yield(Candidate("phone", seg.start, seg._end, " MX ", "  MC"))
			yield(Candidate("phone", seg.start, seg._end, "  mx ", ""))
			yield(Candidate("phone", seg.start, seg._end, " mc ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -x ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -c ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -C  ", "   -X"))
		elseif (input:sub(#input - 1, #input) == "69") then
			yield(Candidate("phone", seg.start, seg._end, " MV ", "  MB"))
			yield(Candidate("phone", seg.start, seg._end, "  mv ", ""))
			yield(Candidate("phone", seg.start, seg._end, " mb ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -v ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -b ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -B  ", "   -V"))
		elseif (input:sub(#input - 1, #input) == "60") then
			yield(Candidate("phone", seg.start, seg._end, " MN ", "  M-"))
			yield(Candidate("phone", seg.start, seg._end, "  mn ", ""))
			yield(Candidate("phone", seg.start, seg._end, " m- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -n ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " --  ", "   -N"))
		elseif (input:sub(#input - 1, #input) == "7%") then
			yield(Candidate("phone", seg.start, seg._end, " ZQ ", "  Z-"))
			yield(Candidate("phone", seg.start, seg._end, "  zq ", ""))
			yield(Candidate("phone", seg.start, seg._end, " z- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -q ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " --  ", "   -Q"))
		elseif (input:sub(#input - 1, #input) == "7?") then
			yield(Candidate("phone", seg.start, seg._end, " ZW ", "  ZE"))
			yield(Candidate("phone", seg.start, seg._end, "  zw ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ze ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -w ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -e ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -E  ", "   -W"))
		elseif (input:sub(#input - 1, #input) == "7!") then
			yield(Candidate("phone", seg.start, seg._end, " ZR ", "  ZT"))
			yield(Candidate("phone", seg.start, seg._end, "  zr ", ""))
			yield(Candidate("phone", seg.start, seg._end, " zt ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -r ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -t ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -T  ", "   -R"))
		elseif (input:sub(#input - 1, #input) == "7,") then
			yield(Candidate("phone", seg.start, seg._end, " ZY ", "  ZU"))
			yield(Candidate("phone", seg.start, seg._end, "  zy ", ""))
			yield(Candidate("phone", seg.start, seg._end, " zu ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -y ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -u ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -U  ", "   -Y"))
		elseif (input:sub(#input - 1, #input) == "7.") then
			yield(Candidate("phone", seg.start, seg._end, " ZI ", "  ZO"))
			yield(Candidate("phone", seg.start, seg._end, "  zi ", ""))
			yield(Candidate("phone", seg.start, seg._end, " zo ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -i ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -o ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -O  ", "   -I"))
		elseif (input:sub(#input - 1, #input) == "7@") then
			yield(Candidate("phone", seg.start, seg._end, " ZP ", "  Z-"))
			yield(Candidate("phone", seg.start, seg._end, "  zp ", ""))
			yield(Candidate("phone", seg.start, seg._end, " z- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -p ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " --  ", "   -P"))
		elseif (input:sub(#input - 1, #input) == "71") then
			yield(Candidate("phone", seg.start, seg._end, " ZA ", "  Z-"))
			yield(Candidate("phone", seg.start, seg._end, "  za ", ""))
			yield(Candidate("phone", seg.start, seg._end, " z- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -a ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " --  ", "   -A"))
		elseif (input:sub(#input - 1, #input) == "72") then
			yield(Candidate("phone", seg.start, seg._end, " ZS ", "  ZD"))
			yield(Candidate("phone", seg.start, seg._end, "  zs ", ""))
			yield(Candidate("phone", seg.start, seg._end, " zd ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -s ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -d ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -D  ", "   -S"))
		elseif (input:sub(#input - 1, #input) == "73") then
			yield(Candidate("phone", seg.start, seg._end, " ZF ", "  ZG"))
			yield(Candidate("phone", seg.start, seg._end, "  zf ", ""))
			yield(Candidate("phone", seg.start, seg._end, " zg ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -f ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -g ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -G  ", "   -F"))
		elseif (input:sub(#input - 1, #input) == "74") then
			yield(Candidate("phone", seg.start, seg._end, " ZH ", "  ZJ"))
			yield(Candidate("phone", seg.start, seg._end, "  zh ", ""))
			yield(Candidate("phone", seg.start, seg._end, " zj ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -h ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -j ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -J  ", "   -H"))
		elseif (input:sub(#input - 1, #input) == "75") then
			yield(Candidate("phone", seg.start, seg._end, " ZK ", "  ZL"))
			yield(Candidate("phone", seg.start, seg._end, "  zk ", ""))
			yield(Candidate("phone", seg.start, seg._end, " zl ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -k ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -l ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -L  ", "   -K"))
		elseif (input:sub(#input - 1, #input) == "76") then
			yield(Candidate("phone", seg.start, seg._end, " ZM ", "  Z-"))
			yield(Candidate("phone", seg.start, seg._end, "  zm ", ""))
			yield(Candidate("phone", seg.start, seg._end, " z- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -m ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " --  ", "   -M"))
		elseif (input:sub(#input - 1, #input) == "77") then
			yield(Candidate("phone", seg.start, seg._end, " ZZ ", "  Z-"))
			yield(Candidate("phone", seg.start, seg._end, "  zz ", ""))
			yield(Candidate("phone", seg.start, seg._end, " z- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -z ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " --  ", "   -Z"))
		elseif (input:sub(#input - 1, #input) == "78") then
			yield(Candidate("phone", seg.start, seg._end, " ZX ", "  ZC"))
			yield(Candidate("phone", seg.start, seg._end, "  zx ", ""))
			yield(Candidate("phone", seg.start, seg._end, " zc ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -x ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -c ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -C  ", "   -X"))
		elseif (input:sub(#input - 1, #input) == "79") then
			yield(Candidate("phone", seg.start, seg._end, " ZV ", "  ZB"))
			yield(Candidate("phone", seg.start, seg._end, "  zv ", ""))
			yield(Candidate("phone", seg.start, seg._end, " zb ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -v ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -b ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -B  ", "   -V"))
		elseif (input:sub(#input - 1, #input) == "70") then
			yield(Candidate("phone", seg.start, seg._end, " ZN ", "  Z-"))
			yield(Candidate("phone", seg.start, seg._end, "  zn ", ""))
			yield(Candidate("phone", seg.start, seg._end, " z- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -n ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " --  ", "   -N"))
		elseif (input:sub(#input - 1, #input) == "8%") then
			yield(Candidate("phone", seg.start, seg._end, " XQ ", "  X-"))
			yield(Candidate("phone", seg.start, seg._end, "  xq ", ""))
			yield(Candidate("phone", seg.start, seg._end, " x- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  cq ", ""))
			yield(Candidate("phone", seg.start, seg._end, " c- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " C-  ", "   CQ"))
		elseif (input:sub(#input - 1, #input) == "8?") then
			yield(Candidate("phone", seg.start, seg._end, " XW ", "  XE"))
			yield(Candidate("phone", seg.start, seg._end, "  xw ", ""))
			yield(Candidate("phone", seg.start, seg._end, " xe ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  cw ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ce ", ""))
			yield(Candidate("phone", seg.start, seg._end, " CE  ", "   CW"))
		elseif (input:sub(#input - 1, #input) == "8!") then
			yield(Candidate("phone", seg.start, seg._end, " XR ", "  XT"))
			yield(Candidate("phone", seg.start, seg._end, "  xr ", ""))
			yield(Candidate("phone", seg.start, seg._end, " xt ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  cr ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ct ", ""))
			yield(Candidate("phone", seg.start, seg._end, " CT  ", "   CR"))
		elseif (input:sub(#input - 1, #input) == "8,") then
			yield(Candidate("phone", seg.start, seg._end, " XY ", "  XU"))
			yield(Candidate("phone", seg.start, seg._end, "  xy ", ""))
			yield(Candidate("phone", seg.start, seg._end, " xu ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  cy ", ""))
			yield(Candidate("phone", seg.start, seg._end, " cu ", ""))
			yield(Candidate("phone", seg.start, seg._end, " CU  ", "   CY"))
		elseif (input:sub(#input - 1, #input) == "8.") then
			yield(Candidate("phone", seg.start, seg._end, " XI ", "  XO"))
			yield(Candidate("phone", seg.start, seg._end, "  xi ", ""))
			yield(Candidate("phone", seg.start, seg._end, " xo ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  ci ", ""))
			yield(Candidate("phone", seg.start, seg._end, " co ", ""))
			yield(Candidate("phone", seg.start, seg._end, " CO  ", "   CI"))
		elseif (input:sub(#input - 1, #input) == "8@") then
			yield(Candidate("phone", seg.start, seg._end, " XP ", "  X-"))
			yield(Candidate("phone", seg.start, seg._end, "  xp ", ""))
			yield(Candidate("phone", seg.start, seg._end, " x- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  cp ", ""))
			yield(Candidate("phone", seg.start, seg._end, " c- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " C-  ", "   CP"))
		elseif (input:sub(#input - 1, #input) == "81") then
			yield(Candidate("phone", seg.start, seg._end, " XA ", "  X-"))
			yield(Candidate("phone", seg.start, seg._end, "  xa ", ""))
			yield(Candidate("phone", seg.start, seg._end, " x- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  ca ", ""))
			yield(Candidate("phone", seg.start, seg._end, " c- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " C-  ", "   CA"))
		elseif (input:sub(#input - 1, #input) == "82") then
			yield(Candidate("phone", seg.start, seg._end, " XS ", "  XD"))
			yield(Candidate("phone", seg.start, seg._end, "  xs ", ""))
			yield(Candidate("phone", seg.start, seg._end, " xd ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  cs ", ""))
			yield(Candidate("phone", seg.start, seg._end, " cd ", ""))
			yield(Candidate("phone", seg.start, seg._end, " CD  ", "   CS"))
		elseif (input:sub(#input - 1, #input) == "83") then
			yield(Candidate("phone", seg.start, seg._end, " XF ", "  XG"))
			yield(Candidate("phone", seg.start, seg._end, "  xf ", ""))
			yield(Candidate("phone", seg.start, seg._end, " xg ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  cf ", ""))
			yield(Candidate("phone", seg.start, seg._end, " cg ", ""))
			yield(Candidate("phone", seg.start, seg._end, " CG  ", "   CF"))
		elseif (input:sub(#input - 1, #input) == "84") then
			yield(Candidate("phone", seg.start, seg._end, " XH ", "  XJ"))
			yield(Candidate("phone", seg.start, seg._end, "  xh ", ""))
			yield(Candidate("phone", seg.start, seg._end, " xj ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  ch ", ""))
			yield(Candidate("phone", seg.start, seg._end, " cj ", ""))
			yield(Candidate("phone", seg.start, seg._end, " CJ  ", "   CH"))
		elseif (input:sub(#input - 1, #input) == "85") then
			yield(Candidate("phone", seg.start, seg._end, " XK ", "  XL"))
			yield(Candidate("phone", seg.start, seg._end, "  xk ", ""))
			yield(Candidate("phone", seg.start, seg._end, " xl ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  ck ", ""))
			yield(Candidate("phone", seg.start, seg._end, " cl ", ""))
			yield(Candidate("phone", seg.start, seg._end, " CL  ", "   CK"))
		elseif (input:sub(#input - 1, #input) == "86") then
			yield(Candidate("phone", seg.start, seg._end, " XM ", "  X-"))
			yield(Candidate("phone", seg.start, seg._end, "  xm ", ""))
			yield(Candidate("phone", seg.start, seg._end, " x- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  cm ", ""))
			yield(Candidate("phone", seg.start, seg._end, " c- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " C-  ", "   CM"))
		elseif (input:sub(#input - 1, #input) == "87") then
			yield(Candidate("phone", seg.start, seg._end, " XZ ", "  X-"))
			yield(Candidate("phone", seg.start, seg._end, "  xz ", ""))
			yield(Candidate("phone", seg.start, seg._end, " x- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  cz ", ""))
			yield(Candidate("phone", seg.start, seg._end, " c- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " C-  ", "   CZ"))
		elseif (input:sub(#input - 1, #input) == "88") then
			yield(Candidate("phone", seg.start, seg._end, " XX ", "  XC"))
			yield(Candidate("phone", seg.start, seg._end, "  xx ", ""))
			yield(Candidate("phone", seg.start, seg._end, " xc ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  cx ", ""))
			yield(Candidate("phone", seg.start, seg._end, " cc ", ""))
			yield(Candidate("phone", seg.start, seg._end, " CC  ", "   CX"))
		elseif (input:sub(#input - 1, #input) == "89") then
			yield(Candidate("phone", seg.start, seg._end, " XV ", "  XB"))
			yield(Candidate("phone", seg.start, seg._end, "  xv ", ""))
			yield(Candidate("phone", seg.start, seg._end, " xb ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  cv ", ""))
			yield(Candidate("phone", seg.start, seg._end, " cb ", ""))
			yield(Candidate("phone", seg.start, seg._end, " CB  ", "   CV"))
		elseif (input:sub(#input - 1, #input) == "80") then
			yield(Candidate("phone", seg.start, seg._end, " XN ", "  X-"))
			yield(Candidate("phone", seg.start, seg._end, "  xn ", ""))
			yield(Candidate("phone", seg.start, seg._end, " x- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  cn ", ""))
			yield(Candidate("phone", seg.start, seg._end, " c- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " C-  ", "   CN"))
		elseif (input:sub(#input - 1, #input) == "9%") then
			yield(Candidate("phone", seg.start, seg._end, " VQ ", "  V-"))
			yield(Candidate("phone", seg.start, seg._end, "  vq ", ""))
			yield(Candidate("phone", seg.start, seg._end, " v- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  bq ", ""))
			yield(Candidate("phone", seg.start, seg._end, " b- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " B-  ", "   BQ"))
		elseif (input:sub(#input - 1, #input) == "9?") then
			yield(Candidate("phone", seg.start, seg._end, " VW ", "  VE"))
			yield(Candidate("phone", seg.start, seg._end, "  vw ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ve ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  bw ", ""))
			yield(Candidate("phone", seg.start, seg._end, " be ", ""))
			yield(Candidate("phone", seg.start, seg._end, " BE  ", "   BW"))
		elseif (input:sub(#input - 1, #input) == "9!") then
			yield(Candidate("phone", seg.start, seg._end, " VR ", "  VT"))
			yield(Candidate("phone", seg.start, seg._end, "  vr ", ""))
			yield(Candidate("phone", seg.start, seg._end, " vt ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  br ", ""))
			yield(Candidate("phone", seg.start, seg._end, " bt ", ""))
			yield(Candidate("phone", seg.start, seg._end, " BT  ", "   BR"))
		elseif (input:sub(#input - 1, #input) == "9,") then
			yield(Candidate("phone", seg.start, seg._end, " VY ", "  VU"))
			yield(Candidate("phone", seg.start, seg._end, "  vy ", ""))
			yield(Candidate("phone", seg.start, seg._end, " vu ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  by ", ""))
			yield(Candidate("phone", seg.start, seg._end, " bu ", ""))
			yield(Candidate("phone", seg.start, seg._end, " BU  ", "   BY"))
		elseif (input:sub(#input - 1, #input) == "9.") then
			yield(Candidate("phone", seg.start, seg._end, " VI ", "  VO"))
			yield(Candidate("phone", seg.start, seg._end, "  vi ", ""))
			yield(Candidate("phone", seg.start, seg._end, " vo ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  bi ", ""))
			yield(Candidate("phone", seg.start, seg._end, " bo ", ""))
			yield(Candidate("phone", seg.start, seg._end, " BO  ", "   BI"))
		elseif (input:sub(#input - 1, #input) == "9@") then
			yield(Candidate("phone", seg.start, seg._end, " VP ", "  V-"))
			yield(Candidate("phone", seg.start, seg._end, "  vp ", ""))
			yield(Candidate("phone", seg.start, seg._end, " v- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  bp ", ""))
			yield(Candidate("phone", seg.start, seg._end, " b- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " B-  ", "   BP"))
		elseif (input:sub(#input - 1, #input) == "91") then
			yield(Candidate("phone", seg.start, seg._end, " VA ", "  V-"))
			yield(Candidate("phone", seg.start, seg._end, "  va ", ""))
			yield(Candidate("phone", seg.start, seg._end, " v- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  ba ", ""))
			yield(Candidate("phone", seg.start, seg._end, " b- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " B-  ", "   BA"))
		elseif (input:sub(#input - 1, #input) == "92") then
			yield(Candidate("phone", seg.start, seg._end, " VS ", "  VD"))
			yield(Candidate("phone", seg.start, seg._end, "  vs ", ""))
			yield(Candidate("phone", seg.start, seg._end, " vd ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  bs ", ""))
			yield(Candidate("phone", seg.start, seg._end, " bd ", ""))
			yield(Candidate("phone", seg.start, seg._end, " BD  ", "   BS"))
		elseif (input:sub(#input - 1, #input) == "93") then
			yield(Candidate("phone", seg.start, seg._end, " VF ", "  VG"))
			yield(Candidate("phone", seg.start, seg._end, "  vf ", ""))
			yield(Candidate("phone", seg.start, seg._end, " vg ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  bf ", ""))
			yield(Candidate("phone", seg.start, seg._end, " bg ", ""))
			yield(Candidate("phone", seg.start, seg._end, " BG  ", "   BF"))
		elseif (input:sub(#input - 1, #input) == "94") then
			yield(Candidate("phone", seg.start, seg._end, " VH ", "  VJ"))
			yield(Candidate("phone", seg.start, seg._end, "  vh ", ""))
			yield(Candidate("phone", seg.start, seg._end, " vj ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  bh ", ""))
			yield(Candidate("phone", seg.start, seg._end, " bj ", ""))
			yield(Candidate("phone", seg.start, seg._end, " BJ  ", "   BH"))
		elseif (input:sub(#input - 1, #input) == "95") then
			yield(Candidate("phone", seg.start, seg._end, " VK ", "  VL"))
			yield(Candidate("phone", seg.start, seg._end, "  vk ", ""))
			yield(Candidate("phone", seg.start, seg._end, " vl ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  bk ", ""))
			yield(Candidate("phone", seg.start, seg._end, " bl ", ""))
			yield(Candidate("phone", seg.start, seg._end, " BL  ", "   BK"))
		elseif (input:sub(#input - 1, #input) == "96") then
			yield(Candidate("phone", seg.start, seg._end, " VM ", "  V-"))
			yield(Candidate("phone", seg.start, seg._end, "  vm ", ""))
			yield(Candidate("phone", seg.start, seg._end, " v- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  bm ", ""))
			yield(Candidate("phone", seg.start, seg._end, " b- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " B-  ", "   BM"))
		elseif (input:sub(#input - 1, #input) == "97") then
			yield(Candidate("phone", seg.start, seg._end, " VZ ", "  V-"))
			yield(Candidate("phone", seg.start, seg._end, "  vz ", ""))
			yield(Candidate("phone", seg.start, seg._end, " v- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  bz ", ""))
			yield(Candidate("phone", seg.start, seg._end, " b- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " B-  ", "   BZ"))
		elseif (input:sub(#input - 1, #input) == "98") then
			yield(Candidate("phone", seg.start, seg._end, " VX ", "  VC"))
			yield(Candidate("phone", seg.start, seg._end, "  vx ", ""))
			yield(Candidate("phone", seg.start, seg._end, " vc ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  bx ", ""))
			yield(Candidate("phone", seg.start, seg._end, " bc ", ""))
			yield(Candidate("phone", seg.start, seg._end, " BC  ", "   BX"))
		elseif (input:sub(#input - 1, #input) == "99") then
			yield(Candidate("phone", seg.start, seg._end, " VV ", "  VB"))
			yield(Candidate("phone", seg.start, seg._end, "  vv ", ""))
			yield(Candidate("phone", seg.start, seg._end, " vb ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  bv ", ""))
			yield(Candidate("phone", seg.start, seg._end, " bb ", ""))
			yield(Candidate("phone", seg.start, seg._end, " BB  ", "   BV"))
		elseif (input:sub(#input - 1, #input) == "90") then
			yield(Candidate("phone", seg.start, seg._end, " VN ", "  V-"))
			yield(Candidate("phone", seg.start, seg._end, "  vn ", ""))
			yield(Candidate("phone", seg.start, seg._end, " v- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  bn ", ""))
			yield(Candidate("phone", seg.start, seg._end, " b- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " B-  ", "   BN"))
		elseif (input:sub(#input - 1, #input) == "0%") then
			yield(Candidate("phone", seg.start, seg._end, " NQ ", "  N-"))
			yield(Candidate("phone", seg.start, seg._end, "  nq ", ""))
			yield(Candidate("phone", seg.start, seg._end, " n- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -q ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " --  ", "   -Q"))
		elseif (input:sub(#input - 1, #input) == "0?") then
			yield(Candidate("phone", seg.start, seg._end, " NW ", "  NE"))
			yield(Candidate("phone", seg.start, seg._end, "  nw ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ne ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -w ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -e ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -E  ", "   -W"))
		elseif (input:sub(#input - 1, #input) == "0!") then
			yield(Candidate("phone", seg.start, seg._end, " NR ", "  NT"))
			yield(Candidate("phone", seg.start, seg._end, "  nr ", ""))
			yield(Candidate("phone", seg.start, seg._end, " nt ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -r ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -t ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -T  ", "   -R"))
		elseif (input:sub(#input - 1, #input) == "0,") then
			yield(Candidate("phone", seg.start, seg._end, " NY ", "  NU"))
			yield(Candidate("phone", seg.start, seg._end, "  ny ", ""))
			yield(Candidate("phone", seg.start, seg._end, " nu ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -y ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -u ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -U  ", "   -Y"))
		elseif (input:sub(#input - 1, #input) == "0.") then
			yield(Candidate("phone", seg.start, seg._end, " NI ", "  NO"))
			yield(Candidate("phone", seg.start, seg._end, "  ni ", ""))
			yield(Candidate("phone", seg.start, seg._end, " no ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -i ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -o ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -O  ", "   -I"))
		elseif (input:sub(#input - 1, #input) == "0@") then
			yield(Candidate("phone", seg.start, seg._end, " NP ", "  N-"))
			yield(Candidate("phone", seg.start, seg._end, "  np ", ""))
			yield(Candidate("phone", seg.start, seg._end, " n- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -p ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " --  ", "   -P"))
		elseif (input:sub(#input - 1, #input) == "01") then
			yield(Candidate("phone", seg.start, seg._end, " NA ", "  N-"))
			yield(Candidate("phone", seg.start, seg._end, "  na ", ""))
			yield(Candidate("phone", seg.start, seg._end, " n- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -a ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " --  ", "   -A"))
		elseif (input:sub(#input - 1, #input) == "02") then
			yield(Candidate("phone", seg.start, seg._end, " NS ", "  ND"))
			yield(Candidate("phone", seg.start, seg._end, "  ns ", ""))
			yield(Candidate("phone", seg.start, seg._end, " nd ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -s ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -d ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -D  ", "   -S"))
		elseif (input:sub(#input - 1, #input) == "03") then
			yield(Candidate("phone", seg.start, seg._end, " NF ", "  NG"))
			yield(Candidate("phone", seg.start, seg._end, "  nf ", ""))
			yield(Candidate("phone", seg.start, seg._end, " ng ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -f ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -g ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -G  ", "   -F"))
		elseif (input:sub(#input - 1, #input) == "04") then
			yield(Candidate("phone", seg.start, seg._end, " NH ", "  NJ"))
			yield(Candidate("phone", seg.start, seg._end, "  nh ", ""))
			yield(Candidate("phone", seg.start, seg._end, " nj ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -h ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -j ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -J  ", "   -H"))
		elseif (input:sub(#input - 1, #input) == "05") then
			yield(Candidate("phone", seg.start, seg._end, " NK ", "  NL"))
			yield(Candidate("phone", seg.start, seg._end, "  nk ", ""))
			yield(Candidate("phone", seg.start, seg._end, " nl ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -k ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -l ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -L  ", "   -K"))
		elseif (input:sub(#input - 1, #input) == "06") then
			yield(Candidate("phone", seg.start, seg._end, " NM ", "  N-"))
			yield(Candidate("phone", seg.start, seg._end, "  nm ", ""))
			yield(Candidate("phone", seg.start, seg._end, " n- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -m ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " --  ", "   -M"))
		elseif (input:sub(#input - 1, #input) == "07") then
			yield(Candidate("phone", seg.start, seg._end, " NZ ", "  N-"))
			yield(Candidate("phone", seg.start, seg._end, "  nz ", ""))
			yield(Candidate("phone", seg.start, seg._end, " n- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -z ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " --  ", "   -Z"))
		elseif (input:sub(#input - 1, #input) == "08") then
			yield(Candidate("phone", seg.start, seg._end, " NX ", "  NC"))
			yield(Candidate("phone", seg.start, seg._end, "  nx ", ""))
			yield(Candidate("phone", seg.start, seg._end, " nc ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -x ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -c ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -C  ", "   -X"))
		elseif (input:sub(#input - 1, #input) == "09") then
			yield(Candidate("phone", seg.start, seg._end, " NV ", "  NB"))
			yield(Candidate("phone", seg.start, seg._end, "  nv ", ""))
			yield(Candidate("phone", seg.start, seg._end, " nb ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -v ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -b ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -B  ", "   -V"))
		elseif (input:sub(#input - 1, #input) == "00") then
			yield(Candidate("phone", seg.start, seg._end, " NN ", "  N-"))
			yield(Candidate("phone", seg.start, seg._end, "  nn ", ""))
			yield(Candidate("phone", seg.start, seg._end, " n- ", ""))
			yield(Candidate("phone", seg.start, seg._end, "  -n ", ""))
			yield(Candidate("phone", seg.start, seg._end, " -- ", ""))
			yield(Candidate("phone", seg.start, seg._end, " --  ", "   -N"))
		end
	end
end
return translator